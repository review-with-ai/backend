plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java-library'
    id 'io.sentry.jvm.gradle' version '4.5.0'
}

group = 'com.aireview'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    queryDslVersion = "5.0.0"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    //db
    api 'org.flywaydb:flyway-mysql'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
//    implementation "com.querydsl:querydsl-jpa:$queryDslVersion:jakarta"
//    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
//    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
//    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta")
    implementation("org.springframework.data:spring-data-envers")

    //etc
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

    //lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //feign - http client
    api 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.4'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
    }
}

bootJar.enabled = false
jar.enabled = true

test {
    useJUnitPlatform()
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [generated]
}

clean {
    delete file(generated)
}

